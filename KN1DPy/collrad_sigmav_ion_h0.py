import numpy as np 
from scipy import interpolate

#   Evaluates ionization rate from the collisional-radiative calculations 
# of the COLLRAD code (D. Stotler, DEGAS 2 user manual, p.24)
#
# Input:
#   N_E - fltarr, electron density (m^-3)
#   T_E - fltarr, electron temperature (eV)
# Returns:
#   Ionization Rate (m^3 s^-1)
#
#Gwendolyn Galleher 


def collrad_sigmav_ion_h0(N_e, T_e): # removed unused argument p - nh
    if np.size(N_e) != np.size(T_e):
        raise Exception('Number of elements in inputs do not match.')
    temp = T_e
    dens = N_e
    dens = dens/1e6 #convert from m^-3 to cm^-3

    # compute indices for interpolation on sigmav grid:
    indte = np.maximum(10*(np.log10(temp)+1.2), 0)
    indte = np.minimum(indte, 59) 
    indne = np.maximum(2*(np.log10(dens)-10), 0)
    indne = np.minimum(indne,14)

    sigmav = np.zeros((15,60))
    sigmav[0,:] = np.array( \
        [1.00000e-99,  1.93923e-83,  6.89061e-68,  4.81352e-56,  2.12250e-46,  9.93199e-39, \
         1.25671e-32,  9.04277e-28,  6.67852e-24,  8.09280e-21,  2.33560e-18,  2.15831e-16, \
         8.07713e-15,  1.47468e-13,  1.52339e-12,  9.98880e-12,  4.56713e-11,  1.56457e-10, \
         4.25656e-10,  9.62858e-10,  1.87782e-09,  3.24950e-09,  5.10420e-09,  7.40869e-09, \
         1.00762e-08,  1.29813e-08,  1.59765e-08,  1.89101e-08,  2.16417e-08,  2.40538e-08, \
         2.60594e-08,  2.76056e-08,  2.86722e-08,  2.92677e-08,  2.94235e-08,  2.91866e-08, \
         2.86140e-08,  2.77660e-08,  2.67027e-08,  2.54802e-08,  2.41490e-08,  2.27526e-08, \
         2.13275e-08,  1.99032e-08,  1.85028e-08,  1.71439e-08,  1.58392e-08,  1.45975e-08, \
         1.34241e-08,  1.23219e-08,  1.12919e-08,  1.03333e-08,  9.44439e-09,  8.62253e-09, \
         7.86463e-09,  7.16725e-09,  6.52676e-09,  5.93948e-09,  5.40175e-09,  4.90998e-09])

    sigmav[1,:] = np.array( \
        [1.00000e-99,  3.08801e-83,  1.44609e-68,  6.61093e-56,  2.75895e-46,  1.23330e-38, \
         1.50372e-32,  1.05015e-27,  7.57152e-24,  8.99868e-21,  2.55656e-18,  2.33242e-16, \
         8.63712e-15,  1.56316e-13,  1.60290e-12,  1.04452e-11,  4.75051e-11,  1.62007e-10, \
         4.39062e-10,  9.89927e-10,  1.92522e-09,  3.32363e-09,  5.21011e-09,  7.54947e-09, \
         1.02527e-08,  1.31921e-08,  1.62184e-08,  1.91784e-08,  2.19306e-08,  2.43570e-08, \
         2.63707e-08,  2.79190e-08,  2.89825e-08,  2.95705e-08,  2.97153e-08,  2.94650e-08, \
         2.88770e-08,  2.80127e-08,  2.69326e-08,  2.56933e-08,  2.43455e-08,  2.29331e-08, \
         2.14927e-08,  2.00539e-08,  1.86399e-08,  1.72683e-08,  1.59518e-08,  1.46992e-08, \
         1.35157e-08,  1.24044e-08,  1.13659e-08,  1.03997e-08,  9.50370e-09,  8.67547e-09, \
         7.91178e-09,  7.20916e-09,  6.56393e-09,  5.97238e-09,  5.43080e-09,  4.93558e-09])

    sigmav[2,:] = np.array( \
        [5.02155e-94,  5.61298e-83,  2.01483e-68,  1.01676e-55,  3.96596e-46,  1.67642e-38, \
         1.95224e-32,  1.31341e-27,  9.18722e-24,  1.06529e-20,  2.96557e-18,  2.65962e-16, \
         9.70465e-15,  1.73375e-13,  1.75725e-12,  1.13324e-11,  5.10556e-11,  1.72647e-10, \
         4.64378e-10,  1.04004e-09,  2.01092e-09,  3.45409e-09,  5.39125e-09,  7.78327e-09, \
         1.05374e-08,  1.35232e-08,  1.65890e-08,  1.95805e-08,  2.23556e-08,  2.47963e-08, \
         2.68160e-08,  2.83628e-08,  2.94184e-08,  2.99932e-08,  3.01207e-08,  2.98500e-08, \
         2.92397e-08,  2.83519e-08,  2.72479e-08,  2.59849e-08,  2.46139e-08,  2.31792e-08, \
         2.17176e-08,  2.02588e-08,  1.88261e-08,  1.74372e-08,  1.61046e-08,  1.48372e-08, \
         1.36402e-08,  1.25165e-08,  1.14668e-08,  1.04902e-08,  9.58494e-09,  8.74826e-09, \
         7.97693e-09,  7.26741e-09,  6.61595e-09,  6.01878e-09,  5.47214e-09,  4.97237e-09])

    sigmav[3,:] = np.array( \
        [5.02155e-94,  1.21407e-82,  2.72028e-67,  1.85445e-55,  6.72737e-46,  2.66857e-38, \
         2.94291e-32,  1.89009e-27,  1.27059e-23,  1.42341e-20,  3.84394e-18,  3.35462e-16, \
         1.19403e-14,  2.08505e-13,  2.06925e-12,  1.30910e-11,  5.79549e-11,  1.92922e-10, \
         5.11701e-10,  1.13197e-09,  2.16518e-09,  3.68451e-09,  5.70499e-09,  8.18013e-09, \
         1.10109e-08,  1.40621e-08,  1.71800e-08,  2.02091e-08,  2.30078e-08,  2.54591e-08, \
         2.74780e-08,  2.90144e-08,  3.00515e-08,  3.06018e-08,  3.07000e-08,  3.03970e-08, \
         2.97526e-08,  2.88297e-08,  2.76907e-08,  2.63932e-08,  2.49889e-08,  2.35223e-08, \
         2.20305e-08,  2.05434e-08,  1.90843e-08,  1.76708e-08,  1.63157e-08,  1.50275e-08, \
         1.38115e-08,  1.26705e-08,  1.16050e-08,  1.06142e-08,  9.69599e-09,  8.84763e-09, \
         8.06578e-09,  7.34678e-09,  6.68680e-09,  6.08199e-09,  5.52848e-09,  5.02256e-09])

    sigmav[4,:] = np.array( \
        [1.00000e-99,  3.19565e-82,  4.18721e-67,  4.17673e-55,  1.40099e-45,  5.15844e-38, \
         5.30819e-32,  3.19983e-27,  2.03100e-23,  2.16062e-20,  5.57007e-18,  4.66256e-16, \
         1.59854e-14,  2.69884e-13,  2.59804e-12,  1.59955e-11,  6.91065e-11,  2.25123e-10, \
         5.85824e-10,  1.27442e-09,  2.40234e-09,  4.03669e-09,  6.18242e-09,  8.78196e-09, \
         1.17266e-08,  1.48744e-08,  1.80675e-08,  2.11495e-08,  2.39793e-08,  2.64419e-08, \
         2.84550e-08,  2.99714e-08,  3.09774e-08,  3.14880e-08,  3.15405e-08,  3.11880e-08, \
         3.04918e-08,  2.95165e-08,  2.83255e-08,  2.69772e-08,  2.55242e-08,  2.40112e-08, \
         2.24756e-08,  2.09474e-08,  1.94502e-08,  1.80015e-08,  1.66139e-08,  1.52960e-08, \
         1.40528e-08,  1.28870e-08,  1.17991e-08,  1.07879e-08,  9.85127e-09,  8.98633e-09, \
         8.18954e-09,  7.45712e-09,  6.78510e-09,  6.16949e-09,  5.60633e-09,  5.09177e-09])

    sigmav[5,:] = np.array( \
        [1.00000e-99,  9.52529e-82,  1.19701e-66,  1.07741e-54,  3.31427e-45,  1.11936e-37, \
         1.06082e-31,  5.92680e-27,  3.51233e-23,  3.51436e-20,  8.57944e-18,  6.84166e-16, \
         2.24629e-14,  3.64844e-13,  3.39221e-12,  2.02490e-11,  8.51006e-11,  2.70549e-10, \
         6.89107e-10,  1.47130e-09,  2.72871e-09,  4.52099e-09,  6.84050e-09,  9.61544e-09, \
         1.27242e-08,  1.60150e-08,  1.93237e-08,  2.24907e-08,  2.53748e-08,  2.78627e-08, \
         2.98752e-08,  3.13689e-08,  3.23341e-08,  3.27899e-08,  3.27776e-08,  3.23533e-08, \
         3.15814e-08,  3.05288e-08,  2.92605e-08,  2.78369e-08,  2.63110e-08,  2.47287e-08, \
         2.31278e-08,  2.15385e-08,  1.99845e-08,  1.84834e-08,  1.70476e-08,  1.56856e-08, \
         1.44023e-08,  1.32000e-08,  1.20790e-08,  1.10379e-08,  1.00744e-08,  9.18520e-09, \
         8.36663e-09,  7.61467e-09,  6.92516e-09,  6.29390e-09,  5.71676e-09,  5.18974e-09])

    sigmav[6,:] = np.array( \
        [5.02155e-94,  1.27796e-79,  3.53013e-66,  3.02561e-54,  8.53989e-45,  2.63882e-37, \
         2.29129e-31,  1.17818e-26,  6.46754e-23,  6.03915e-20,  1.38638e-17,  1.04711e-15, \
         3.27702e-14,  5.10164e-13,  4.56794e-12,  2.63735e-11,  1.07611e-10,  3.33347e-10, \
         8.30037e-10,  1.73776e-09,  3.16898e-09,  5.17512e-09,  7.73404e-09,  1.07569e-08, \
         1.41054e-08,  1.76140e-08,  2.11077e-08,  2.44203e-08,  2.74072e-08,  2.99553e-08, \
         3.19878e-08,  3.34655e-08,  3.43843e-08,  3.47692e-08,  3.46670e-08,  3.41395e-08, \
         3.32557e-08,  3.20868e-08,  3.07012e-08,  2.91615e-08,  2.75231e-08,  2.58330e-08, \
         2.41302e-08,  2.24454e-08,  2.08027e-08,  1.92196e-08,  1.77085e-08,  1.62777e-08, \
         1.49318e-08,  1.36728e-08,  1.25005e-08,  1.14132e-08,  1.04081e-08,  9.48171e-09, \
         8.62980e-09,  7.84806e-09,  7.13197e-09,  6.47704e-09,  5.87884e-09,  5.33309e-09])

    sigmav[7,:] = np.array( \
        [1.00000e-99,  9.49905e-81,  1.21157e-65,  9.63177e-54,  2.50897e-44,  7.07421e-37, \
         5.58076e-31,  2.61346e-26,  1.31537e-22,  1.13546e-19,  2.42899e-17,  1.72162e-15, \
         5.08790e-14,  7.52327e-13,  6.43388e-12,  3.56797e-11,  1.40576e-10,  4.22650e-10, \
         1.02627e-09,  2.10411e-09,  3.77155e-09,  6.07296e-09,  8.97160e-09,  1.23596e-08, \
         1.60778e-08,  1.99399e-08,  2.37526e-08,  2.73347e-08,  3.05313e-08,  3.32238e-08, \
         3.53349e-08,  3.68290e-08,  3.77083e-08,  3.80062e-08,  3.77787e-08,  3.70969e-08, \
         3.60386e-08,  3.46826e-08,  3.31039e-08,  3.13707e-08,  2.95424e-08,  2.76695e-08, \
         2.57929e-08,  2.39450e-08,  2.21505e-08,  2.04275e-08,  1.87883e-08,  1.72408e-08, \
         1.57892e-08,  1.44348e-08,  1.31767e-08,  1.20125e-08,  1.09387e-08,  9.95088e-09, \
         9.04435e-09,  8.21404e-09,  7.45483e-09,  6.76166e-09,  6.12960e-09,  5.55389e-09])

    sigmav[8,:] = np.array( \
        [5.02157e-94,  1.52401e-79,  4.64668e-65,  3.52562e-53,  8.60248e-44,  2.23707e-36, \
         1.61239e-30,  6.86706e-26,  3.13746e-22,  2.45906e-19,  4.78939e-17,  3.10847e-15, \
         8.48355e-14,  1.17030e-12,  9.43638e-12,  4.98402e-11,  1.88682e-10,  5.49278e-10, \
         1.29978e-09,  2.61118e-09,  4.60686e-09,  7.32802e-09,  1.07249e-08,  1.46683e-08, \
         1.89719e-08,  2.34184e-08,  2.77831e-08,  3.18564e-08,  3.54606e-08,  3.84622e-08, \
         4.07768e-08,  4.23693e-08,  4.32485e-08,  4.34589e-08,  4.30706e-08,  4.21692e-08, \
         4.08473e-08,  3.91975e-08,  3.73067e-08,  3.52535e-08,  3.31056e-08,  3.09200e-08, \
         2.87424e-08,  2.66088e-08,  2.45462e-08,  2.25740e-08,  2.07050e-08,  1.89472e-08, \
         1.73042e-08,  1.57766e-08,  1.43625e-08,  1.30585e-08,  1.18598e-08,  1.07608e-08, \
         9.75556e-09,  8.83789e-09,  8.00154e-09,  7.24040e-09,  6.54854e-09,  5.92032e-09])

    sigmav[9,:] = np.array( \
        [6.57984e-99,  3.12266e-79,  1.90237e-64,  1.39798e-52,  3.26114e-43,  7.99326e-36, \
         5.34708e-30,  2.08169e-25,  8.59191e-22,  6.04879e-19,  1.05911e-16,  6.21818e-15, \
         1.55015e-13,  1.97574e-12,  1.48881e-11,  7.42751e-11,  2.68099e-10,  7.50404e-10, \
         1.72007e-09,  3.36947e-09,  5.83003e-09,  9.13864e-09,  1.32310e-08,  1.79548e-08, \
         2.30925e-08,  2.83899e-08,  3.35826e-08,  3.84224e-08,  4.26980e-08,  4.62497e-08, \
         4.89764e-08,  5.08358e-08,  5.18383e-08,  5.20368e-08,  5.15155e-08,  5.03774e-08, \
         4.87340e-08,  4.66970e-08,  4.43717e-08,  4.18534e-08,  3.92245e-08,  3.65541e-08, \
         3.38983e-08,  3.13009e-08,  2.87948e-08,  2.64035e-08,  2.41427e-08,  2.20217e-08, \
         2.00446e-08,  1.82117e-08,  1.65205e-08,  1.49659e-08,  1.35419e-08,  1.22411e-08, \
         1.10557e-08,  9.97781e-09,  8.99934e-09,  8.11247e-09,  7.30968e-09,  6.58379e-09])

    sigmav[10,:] = np.array( \
        [5.02165e-94,  7.23483e-79,  7.18473e-64,  5.20288e-52,  1.18541e-42,  2.80684e-35, \
         1.78891e-29,  6.54358e-25,  2.50868e-21,  1.62582e-18,  2.59802e-16,  1.38202e-14, \
         3.11275e-13,  3.59539e-12,  2.47501e-11,  1.14059e-10,  3.85018e-10,  1.02035e-09, \
         2.23998e-09,  4.24477e-09,  7.16452e-09,  1.10289e-08,  1.57632e-08,  2.12011e-08, \
         2.71066e-08,  3.32026e-08,  3.91980e-08,  4.48166e-08,  4.98202e-08,  5.40250e-08, \
         5.73106e-08,  5.96211e-08,  6.09590e-08,  6.13749e-08,  6.09551e-08,  5.98088e-08, \
         5.80569e-08,  5.58220e-08,  5.32219e-08,  5.03646e-08,  4.73454e-08,  4.42457e-08, \
         4.11331e-08,  3.80619e-08,  3.50745e-08,  3.22025e-08,  2.94686e-08,  2.68879e-08, \
         2.44691e-08,  2.22162e-08,  2.01291e-08,  1.82046e-08,  1.64373e-08,  1.48205e-08, \
         1.33459e-08,  1.20049e-08,  1.07884e-08,  9.68734e-09,  8.69263e-09,  7.79552e-09])

    sigmav[11,:] = np.array( \
        [5.02166e-94,  2.11229e-78,  2.24556e-63,  1.64685e-51,  3.76181e-42,  8.83729e-35, \
         5.53407e-29,  1.96853e-24,  7.23477e-21,  4.38191e-18,  6.32570e-16,  2.95914e-14, \
         5.81675e-13,  5.92425e-12,  3.66632e-11,  1.55190e-10,  4.90717e-10,  1.23849e-09, \
         2.62341e-09,  4.84507e-09,  8.02964e-09,  1.22034e-08,  1.72886e-08,  2.31155e-08, \
         2.94424e-08,  3.59846e-08,  4.24410e-08,  4.85240e-08,  5.39834e-08,  5.86240e-08, \
         6.23155e-08,  6.49935e-08,  6.66539e-08,  6.73428e-08,  6.71440e-08,  6.61657e-08, \
         6.45290e-08,  6.23581e-08,  5.97730e-08,  5.68847e-08,  5.37918e-08,  5.05796e-08, \
         4.73193e-08,  4.40694e-08,  4.08762e-08,  3.77754e-08,  3.47938e-08,  3.19501e-08, \
         2.92571e-08,  2.67223e-08,  2.43489e-08,  2.21372e-08,  2.00847e-08,  1.81872e-08, \
         1.64392e-08,  1.48339e-08,  1.33641e-08,  1.20222e-08,  1.08000e-08,  9.68976e-09])

    sigmav[12,:] = np.array( \
        [1.02081e-98,  4.47311e-78,  5.34817e-63,  4.14904e-51,  9.77616e-42,  2.35249e-34, \
         1.48572e-28,  5.25591e-24,  1.86340e-20,  1.02703e-17,  1.27333e-15,  5.03562e-14, \
         8.56836e-13,  7.82720e-12,  4.48312e-11,  1.79786e-10,  5.47667e-10,  1.34709e-09, \
         2.80338e-09,  5.11463e-09,  8.40560e-09,  1.27017e-08,  1.79249e-08,  2.39045e-08, \
         3.03980e-08,  3.71182e-08,  4.37610e-08,  5.00353e-08,  5.56869e-08,  6.05171e-08, \
         6.43918e-08,  6.72436e-08,  6.90662e-08,  6.99038e-08,  6.98389e-08,  6.89790e-08, \
         6.74448e-08,  6.53604e-08,  6.28462e-08,  6.00133e-08,  5.69610e-08,  5.37750e-08, \
         5.05272e-08,  4.72765e-08,  4.40699e-08,  4.09436e-08,  3.79250e-08,  3.50335e-08, \
         3.22823e-08,  2.96795e-08,  2.72292e-08,  2.49320e-08,  2.27865e-08,  2.07890e-08, \
         1.89348e-08,  1.72182e-08,  1.56327e-08,  1.41717e-08,  1.28281e-08,  1.15951e-08])

    sigmav[13,:] = np.array( \
        [7.36093e-99,  6.06931e-78,  8.53837e-63,  7.35153e-51,  1.85978e-41,  4.68546e-34, \
         3.08545e-28,  1.10201e-23,  3.74288e-20,  1.81668e-17,  1.90634e-15,  6.56158e-14, \
         1.01772e-12,  8.77381e-12,  4.84655e-11,  1.89940e-10,  5.69929e-10,  1.38795e-09, \
         2.86925e-09,  5.21207e-09,  8.54009e-09,  1.28799e-08,  1.81517e-08,  2.41857e-08, \
         3.07368e-08,  3.75185e-08,  4.42257e-08,  5.05663e-08,  5.62850e-08,  6.11817e-08, \
         6.51216e-08,  6.80363e-08,  6.99187e-08,  7.08127e-08,  7.08002e-08,  6.99885e-08, \
         6.84982e-08,  6.64537e-08,  6.39751e-08,  6.11739e-08,  5.81493e-08,  5.49873e-08, \
         5.17599e-08,  4.85263e-08,  4.53334e-08,  4.22178e-08,  3.92068e-08,  3.63199e-08, \
         3.35705e-08,  3.09666e-08,  2.85124e-08,  2.62086e-08,  2.40536e-08,  2.20439e-08, \
         2.01749e-08,  1.84406e-08,  1.68348e-08,  1.53508e-08,  1.39816e-08,  1.27203e-08])

    sigmav[14,:] = np.array( \
        [6.38105e-99,  6.80257e-78,  8.60837e-63,  7.83728e-51,  2.31015e-41,  6.54058e-34, \
         4.51976e-28,  1.65716e-23,  5.46805e-20,  2.40282e-17,  2.26542e-15,  7.26816e-14, \
         1.08308e-12,  9.13105e-12,  4.97793e-11,  1.93504e-10,  5.77529e-10,  1.40178e-09, \
         2.89141e-09,  5.24401e-09,  8.58370e-09,  1.29380e-08,  1.82248e-08,  2.42751e-08, \
         3.08494e-08,  3.76528e-08,  4.43870e-08,  5.07519e-08,  5.64953e-08,  6.14129e-08, \
         6.53730e-08,  6.83073e-08,  7.02083e-08,  7.11199e-08,  7.11239e-08,  7.03277e-08, \
         6.88519e-08,  6.68206e-08,  6.43543e-08,  6.15643e-08,  5.85500e-08,  5.53973e-08, \
         5.21785e-08,  4.89525e-08,  4.57666e-08,  4.26572e-08,  3.96516e-08,  3.67696e-08, \
         3.40243e-08,  3.14241e-08,  2.89729e-08,  2.66715e-08,  2.45184e-08,  2.25100e-08, \
         2.06417e-08,  1.89076e-08,  1.73014e-08,  1.58163e-08,  1.44454e-08,  1.31819e-08])

    logsigmav = np.log(sigmav)
    #sigmav_out = np.exp(np.interp(logsigmav, indne, indte))
    xs, ys = logsigmav.shape

    # interpfunc = interpolate.RectBivariateSpline(np.arange(xs), np.arange(ys), logsigmav) #NOTE Better mimics IDL, but not necessarily a better calculation
    # sigmav_out=np.exp(np.array([interpfunc(indne[i],indte[i])[0][0] for i in range(indne.size)]))
    interpfunc = interpolate.RectBivariateSpline(np.arange(xs), np.arange(ys), logsigmav, kx=1, ky=1)
    sigmav_out = np.exp(np.diagonal(interpfunc(indne, indte)))
    # convert from cm^3 to m^3 
    sigmav_out = sigmav_out/1e6
    # print("sigmav_out", sigmav_out.T)
    # input()
    return sigmav_out
