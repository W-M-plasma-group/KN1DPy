import numpy as np
import scipy.interpolate

#    Creates a save set string Bi-cubic spline interpolation 
# coefficients for parameters in Johnson - Hinov rate equations. 
#Gwendolyn Galleher 

def Create_JH_BSCoef():
    DENS = np.array([1e10, 1e11, 1e12, 1e13, 1e14, 1e15, 1e16])
    TEMP = np.array([0.245, 0.69, 1.38, 2.76, 5.52, 11.0, 22.1, 44.1, 88.0, 176.5, 706.0])

    r = np.zeros((5, 2, 11, 7))
    
    r[0][0][0] = [7.6E-6,1.1E-5,1.9E-5,4.9E-5,2.4E-4,2.2E-3,1.8e-2]
    r[0][0][1] = [1.5E-3,1.8E-3,2.5E-3,4.5E-3,1.3E-2,7.1E-2,3.7e-1]
    r[0][0][2] = [2.6E-2,2.9E-2,3.5E-2,4.9E-2,9.6E-2,3.2E-1,7.8e-1]
    r[0][0][3] = [1.3E-1,1.4E-1,1.5E-1,1.9E-1,2.8E-1,6.1E-1,9.2e-1]
    r[0][0][4] = [3.6E-1,3.7E-1,3.8E-1,4.2E-1,5.2E-1,8.0E-1,9.6e-1]
    r[0][0][5] = [6.9E-1,6.9E-1,7.0E-1,7.3E-1,7.9E-1,9.2E-1,9.8e-1]
    r[0][0][6] = [1.1,1.1,1.1,1.1,1.1,1.0,1.0]
    r[0][0][7] = [1.5,1.5,1.5,1.5,1.4,1.1,1.0]
    r[0][0][8] = [2.0,2.0,1.9,1.9,1.7,1.3,1.0]
    r[0][0][9] = [2.4,2.4,2.4,2.3,2.1,1.4,1.1]
    r[0][0][10] = [3.4,3.4,3.3,3.2,2.9,2.0,1.2]

    r[0][1][0] = [2.5E-7,2.5E-6,2.5E-5,2.5E-4,2.5E-3,2.4E-2,2.0e-1]
    r[0][1][1] = [1.9E-7,1.9E-6,1.9E-5,1.9E-4,1.9E-3,1.8E-2,1.0e-1]
    r[0][1][2] = [1.6E-7,1.6E-6,1.6E-5,1.6E-4,1.5E-3,1.1E-2,3.2e-2]
    r[0][1][3] = [1.5E-7,1.5E-6,1.5E-5,1.5E-4,1.3E-3,7.2E-3,1.3e-2]
    r[0][1][4] = [1.6E-7,1.6E-6,1.6E-5,1.5E-4,1.3E-3,5.4E-3,8.0e-3]
    r[0][1][5] = [1.8E-7,1.8E-6,1.8E-5,1.7E-4,1.4E-3,5.1E-3,7.0e-3]
    r[0][1][6] = [2.1E-7,2.1E-6,2.1E-5,2.0E-4,1.6E-3,5.6E-3,7.5e-3]
    r[0][1][7] = [2.3E-7,2.3E-6,2.3E-5,2.2E-4,1.7E-3,6.3E-3,8.7e-3]
    r[0][1][8] = [2.3E-7,2.3E-6,2.3E-5,2.2E-4,1.8E-3,7.0E-3,1.0e-2]
    r[0][1][9] = [2.2e-7,2.2e-6,2.1e-5,2.1e-4,1.7e-3,7.4e-3,1.1e-2]
    r[0][1][10] = [1.6E-7,1.6E-6,1.6E-5,1.6E-4,1.4E-3,7.2E-3,1.3e-2]

    r[1][0][0] = [2.2E-3,3.1E-3,6.0E-3,2.2E-2,1.3E-1,3.5E-1,4.2e-1]
    r[1][0][1] = [2.6E-2,3.3E-2,5.0E-2,1.2E-1,4.3E-1,7.2E-1,8.5e-1]
    r[1][0][2] = [1.1E-1,1.3E-1,1.6E-1,3.0E-1,6.8E-1,8.9E-1,9.7e-1]
    r[1][0][3] = [2.7E-1,2.9E-1,3.4E-1,5.0E-1,8.2E-1,9.5E-1,9.9e-1]
    r[1][0][4] = [4.8E-1,5.0E-1,5.4E-1,6.8E-1,9.0E-1,9.8E-1,1.0]
    r[1][0][5] = [7.3E-1,7.4E-1,7.7E-1,8.5E-1,9.5E-1,9.9E-1,1.0]
    r[1][0][6] = [1.0,1.0,1.0,1.0,1.0,1.0,1.0]
    r[1][0][7] = [1.3,1.3,1.3,1.2,1.1,1.0,1.0]
    r[1][0][8] = [1.6,1.6,1.5,1.4,1.1,1.0,1.0]
    r[1][0][9] = [1.9,1.9,1.8,1.6,1.2,1.1,1.0]
    r[1][0][10] = [2.5,2.4,2.4,2.1,1.5,1.1,1.0]

    r[1][1][0] = [1.0E-7,1.0E-6,1.0E-5,1.0E-4,1.1E-3,1.3E-2,1.1e-1]
    r[1][1][1] = [8.2E-8,8.1E-7,8.0E-6,7.7E-5,6.1E-4,4.5E-3,4.2e-2]
    r[1][1][2] = [7.1E-8,7.0E-7,6.8E-6,5.9E-5,3.3E-4,1.6E-3,4.1e-3]
    r[1][1][3] = [6.8E-8,6.7E-7,6.3E-6,4.9E-5,2.1E-4,7.3E-4,1.2e-3]
    r[1][1][4] = [7.2E-8,7.0E-7,6.5E-6,4.7E-5,1.8E-4,4.9E-4,6.8e-4]
    r[1][1][5] = [8.1E-8,7.8E-7,7.2E-6,5.1E-5,1.9E-4,4.5E-4,5.8e-4]
    r[1][1][6] = [9.1E-8,8.9E-7,8.2E-6,5.8E-5,2.1E-4,5.0E-4,6.4e-4]
    r[1][1][7] = [9.7E-8,9.5E-7,8.8E-6,6.5E-5,2.5E-4,6.0E-4,7.6e-4]
    r[1][1][8] = [9.7E-8,9.4E-7,8.8E-6,6.7E-5,2.7E-4,6.9E-4,9.1e-4]
    r[1][1][9] = [8.9e-8,8.7e-7,8.2e-6,6.5e-5,2.8e-4,7.6e-4,1.0e-3]
    r[1][1][10] = [6.5E-8,6.4E-7,6.1E-6,5.2E-5,2.7E-4,8.0E-4,1.2e-3]

    r[2][0][0] = [1.8E-2,2.8E-2,7.3E-2,3.1E-1,6.0E-1,7.4E-1,7.7e-1]
    r[2][0][1] = [8.2E-2,1.1E-1,2.2E-1,5.6E-1,8.3E-1,9.3E-1,9.6e-1]
    r[2][0][2] = [2.0E-1,2.4E-1,3.9E-1,7.4E-1,9.2E-1,.98,.99]
    r[2][0][3] = [3.7E-1,4.1E-1,5.7E-1,8.4E-1,9.6E-1,.99,1.0]
    r[2][0][4] = [5.6E-1,6.0E-1,7.2E-1,9.0E-1,9.8E-1,1.0,1.0]
    r[2][0][5] = [7.7E-1,7.9E-1,8.5E-1,9.5E-1,9.9E-1,1.0,1.0]
    r[2][0][6] = [9.9E-1,9.9E-1,9.9E-1,1.0,1.0,1.0,1.0]
    r[2][0][7] = [1.2,1.2,1.1,1.1,1.0,1.0,1.0]
    r[2][0][8] = [1.4,1.4,1.3,1.1,1.0,1.0,1.0]
    r[2][0][9] = [1.7,1.6,1.5,1.2,1.1,1.0,1.0]
    r[2][0][10] = [2.1,2.1,1.9,1.5,1.1,1.0,1.0]

    r[2][1][0] = [7.2E-8,7.1E-7,6.9E-6,5.7E-5,4.8E-4,5.3E-3,4.5e-2]
    r[2][1][1] = [5.9E-8,5.7E-7,5.1E-6,3.1E-5,1.7E-4,1.1E-3,5.9e-3]
    r[2][1][2] = [5.1E-8,4.9E-7,4.0E-6,1.9E-5,7.1E-5,3.0E-4,7.8e-4]
    r[2][1][3] = [4.8E-8,4.5E-7,3.4E-6,1.4E-5,4.2E-5,1.3E-4,2.1e-4]
    r[2][1][4] = [5.0E-8,4.7E-7,3.4E-6,1.3E-5,3.5E-5,8.6E-5,1.2e-4]
    r[2][1][5] = [5.6E-8,5.2E-7,3.7E-6,1.4E-5,3.6E-5,8.1E-5,1.0e-4]
    r[2][1][6] = [6.3E-8,5.9E-7,4.3E-6,1.6E-5,4.3E-5,9.3E-5,1.2e-4]
    r[2][1][7] = [6.7E-8,6.3E-7,4.8E-6,1.9E-5,5.2E-5,1.1E-4,1.4e-4]
    r[2][1][8] = [6.6E-8,6.3E-7,4.9E-6,2.1E-5,5.9E-5,1.3E-4,1.7e-4]
    r[2][1][9] = [6.1e-8,5.8e-7,4.7e-6,2.2e-5,6.3e-5,1.4e-4,2.0e-4]
    r[2][1][10] = [4.4E-8,4.2E-7,3.7E-6,2.0E-5,6.4E-5,1.6E-4,2.5e-4]
    
    r[3][0][0] = [5.5E-2,1.E-1,3.3E-1,6.8E-1,8.5E-1,.9,.92]
    r[3][0][1] = [1.5E-1,2.4E-1,5.5E-1,8.4E-1,9.5E-1,.98,.99]
    r[3][0][2] = [2.9E-1,4.0E-1,7.0E-1,9.1E-1,9.8E-1,.99,1.0]
    r[3][0][3] = [4.5E-1,5.5E-1,8.E-1,9.5E-1,9.9E-1,1.0,1.0]
    r[3][0][4] = [6.2E-1,7.0E-1,8.7E-1,9.7E-1,9.9E-1,1.0,1.0]
    r[3][0][5] = [8.0E-1,8.4E-1,9.3E-1,9.8E-1,1.0,1.0,1.0]
    r[3][0][6] = [9.8E-1,9.8E-1,9.9E-1,1.0,1.0,1.0,1.0]
    r[3][0][7] = [1.2,1.1,1.1,1.0,1.0,1.0,1.0]
    r[3][0][8] = [1.4,1.3,1.2,1.0,1.0,1.0,1.0]
    r[3][0][9] = [1.5,1.5,1.3,1.1,1.0,1.0,1.0]
    r[3][0][10] = [1.9,1.9,1.6,1.2,1.0,1.0,1.0]

    r[3][1][0] = [6.0E-8,5.7E-7,4.4E-6,2.5E-5,1.8E-4,2.0E-3,1.6e-2]
    r[3][1][1] = [4.8E-8,4.4E-7,2.7E-6,1.1E-5,5.0E-5,3.2E-4,1.7e-3]
    r[3][1][2] = [4.1E-8,3.5E-7,1.8E-6,5.9E-6,1.9E-5,8.1E-5,2.0e-4]
    r[3][1][3] = [3.8E-8,3.2E-7,1.5E-6,4.2E-6,1.1E-5,3.4E-5,5.5e-5]
    r[3][1][4] = [4.0E-8,3.2E-7,1.4E-6,3.8E-6,9.4E-6,2.3E-5,3.1e-5]
    r[3][1][5] = [4.4E-8,3.6E-7,1.6E-6,4.3E-6,1.0E-5,2.2E-5,2.8e-5]
    r[3][1][6] = [5.0E-8,4.1E-7,1.9E-6,5.2E-6,1.2E-5,2.5E-5,3.2e-5]
    r[3][1][7] = [5.3E-8,4.5E-7,2.2E-6,6.2E-6,1.5E-5,3.1E-5,3.9e-5]
    r[3][1][8] = [5.2E-8,4.5E-7,2.4E-6,7.1E-6,1.7E-5,3.7E-5,4.8e-5]
    r[3][1][9] = [4.8e-8,4.3e-7,2.4e-6,7.6e-6,1.9e-5,4.3e-5,5.7e-5]
    r[3][1][10] = [3.5E-8,3.2E-7,2.1E-6,7.5E-6,2.0E-5,4.8E-5,7.2e-5]

    r[4][0][0] = [1.1E-1,2.7E-1,6.4E-1,8.6E-1,9.4E-1,.96,.97]
    r[4][0][1] = [2.4E-1,4.5E-1,7.9E-1,9.4E-1,9.8E-1,.99,1.0]
    r[4][0][2] = [3.8E-1,6.E-1,8.7E-1,9.7E-1,9.9E-1,1.0,1.0]
    r[4][0][3] = [5.3E-1,7.2E-1,9.1E-1,9.8E-1,1.0,1.0,1.0]
    r[4][0][4] = [6.8E-1,8.1E-1,9.4E-1,9.9E-1,1.0,1.0,1.0]
    r[4][0][5] = [8.2E-1,9.0E-1,9.7E-1,9.9E-1,1.0,1.0,1.0]
    r[4][0][6] = [9.7E-1,9.9E-1,1.0,1.0,1.0,1.0,1.0]
    r[4][0][7] = [1.1,1.1,1.0,1.0,1.0,1.0,1.0]
    r[4][0][8] = [1.3,1.2,1.1,1.0,1.0,1.0,1.0]
    r[4][0][9] = [1.5,1.3,1.1,1.0,1.0,1.0,1.0]
    r[4][0][10] = [1.8,1.7,1.3,1.1,1.0,1.0,1.0]

    r[4][1][0] = [5.2E-8,4.3E-7,2.3E-6,1.0E-5,7.2E-5,7.7E-4,6.5e-3]
    r[4][1][1] = [4.1E-8,3.0E-7,1.2E-6,4.0E-6,1.7E-5,1.1E-4,5.9e-4]
    r[4][1][2] = [3.4E-8,2.2E-7,7.7E-7,2.1E-6,6.6E-6,2.7E-5,6.8e-5]
    r[4][1][3] = [3.1E-8,1.9E-7,6.0E-7,1.5E-6,3.8E-6,1.1E-5,1.8e-5]
    r[4][1][4] = [3.2E-8,1.9E-7,5.9E-7,1.4E-6,3.2E-6,7.7E-6,1.0e-5]
    r[4][1][5] = [3.6E-8,2.1E-7,6.7E-7,1.6E-6,3.5E-6,7.5E-6,9.5e-6]
    r[4][1][6] = [4.1E-8,2.5E-7,8.2E-7,1.9E-6,4.3E-6,8.9E-6,1.1e-5]
    r[4][1][7] = [4.4E-8,2.9E-7,9.8E-7,2.4E-6,5.3E-6,1.1E-5,1.4e-5]
    r[4][1][8] = [4.4E-8,3.0E-7,1.1E-6,2.7E-6,6.3E-6,1.3E-5,1.7e-5]
    r[4][1][9] = [4.0e-8,3.0e-7,1.2e-6,3.0e-6,7.0e-6,1.5e-5,2.1e-5]
    r[4][1][10] = [3.0E-8,2.4E-7,1.1E-6,3.1E-6,7.5E-6,1.8E-5,2.6e-5]


    s = np.array([[2.1e-26,3.2e-26,6.5e-26,2.1e-25,1.3e-24,1.4e-23,1.2e-22], \
                 [1.0e-17,1.3e-17,2.0e-17,4.3e-17,1.5e-16,9.4e-16,5.0e-15], \
                 [3.0e-13,3.4e-13,4.4e-13,7.1e-13,1.7e-12,6.1e-12,1.5e-11], \
                 [6.7e-11,7.3e-11,8.6e-11,1.1e-10,2.0e-10,4.9e-10,7.6e-10], \
                 [1.3e-09,1.4e-09,1.5e-09,1.9e-09,2.7e-09,5.0e-09,6.4e-09], \
                 [6.9e-09,7.2e-09,7.7e-09,8.9e-09,1.2e-08,1.9e-08,2.2e-08], \
                 [1.8e-08,1.8e-08,1.9e-08,2.1e-08,2.7e-08,4.0e-08,4.5e-08], \
                 [2.8e-08,2.9e-08,3.0e-08,3.3e-08,4.1e-08,5.8e-08,6.7e-08], \
                 [3.4e-08,3.5e-08,3.6e-08,3.9e-08,4.8e-08,6.7e-08,7.7e-08], \
                 [3.4e-08,3.4e-08,3.6e-08,3.9e-08,4.7e-08,6.5e-08,7.7e-08], \
                 [2.5e-08,2.6e-08,2.6e-08,2.8e-08,3.3e-08,4.6e-08,5.8e-08]])
    # convert s from cm^3 s^-1 to m^3 s^-1
    s = s*1.0e-6

    alpha = np.array([[1.2e-12,1.7e-12,2.9e-12,7.1e-12,2.7e-11,1.6e-10,1.4e-09], \
                      [6.1e-13,7.3e-13,1.0e-12,1.7e-12,3.9e-12,1.4e-11,7.1e-11], \
                      [3.3e-13,3.6e-13,4.3e-13,5.7e-13,9.2e-13,2.0e-12,4.8e-12], \
                      [1.8e-13,1.9e-13,2.1e-13,2.4e-13,3.1e-13,4.8e-13,7.0e-13], \
                      [1.0e-13,1.0e-13,1.1e-13,1.2e-13,1.3e-13,1.6e-13,1.9e-13], \
                      [5.6e-14,5.7e-14,5.7e-14,5.9e-14,6.1e-14,6.5e-14,7.2e-14], \
                      [3.0e-14,3.0e-14,3.0e-14,3.0e-14,3.0e-14,3.0e-14,3.2e-14], \
                      [1.5e-14,1.5e-14,1.5e-14,1.5e-14,1.5e-14,1.4e-14,1.5e-14], \
                      [7.3e-15,7.3e-15,7.2e-15,7.1e-15,6.9e-15,6.6e-15,6.7e-15], \
                      [3.4e-15,3.4e-15,3.3e-15,3.3e-15,3.2e-15,3.0e-15,3.0e-15], \
                      [6.5e-16,6.5e-16,6.4e-16,6.4e-16,6.2e-16,5.8e-16,5.7e-16]])
    # convert alpha from cm^3 s^-1 to m^3 s^-1
    alpha = alpha * 1.0e-6

    #the following are the spontaneous emission coeffs for n = 2 to 1
    #   3 to 1, ... , 16 to 1
    A_lyman = np.array([4.699e8,5.575e7,1.278e7,4.125e6,1.644e6,7.568e5,3.869e5,
	2.143e5,1.263e5,7.834e4,5.066e4,3.393e4,2.341e4,1.657e4,1.200e4]) # A_balmer copied previously - now fixed

    #the following are the spontaneous emission coeffs for n = 3 to 2
    #   4 to 2, ... 17 to 2
    A_balmer = np.array([4.41e7,8.42e6,2.53e6,9.732e5,4.389e5,2.215e5,1.216e5, \
        7.122e4,4.397e4,2.83e4,18288.8,12249.1,8451.26,5981.95,4332.13])

    # convert to MKS, take natural log
    LogDensity = np.log(DENS*1.0e6)
    LogTe = np.log(TEMP)
    LogR = np.log(r)
    LogS = np.log(s)
    LogAlpha = np.log(alpha)

    # Loop through ION = 0, 1 and p =2, 6 (i = 0, 4)
    # Fit BSCoef to each 

    print('Computing B-Spline coefficients for r0 and r1 values')
    LogR_BSCoef = np.zeros((5, 2, np.size(LogDensity) * np.size(LogTe)))
    for nIon in range(0,2):
        for nP in range(2,7):
            LogR_Interp = scipy.interpolate.RectBivariateSpline(LogTe, LogDensity,LogR[nP-2][nIon])
            LogR_BSCoef[nP-2][nIon] = LogR_Interp.get_coeffs()

    # Do S and Alpha 

    print('Computing B-Spline coefficients for S and alpha values')
    LogS_Interp = scipy.interpolate.RectBivariateSpline(LogTe, LogDensity, LogS)
    LogS_BSCoef = LogS_Interp.get_coeffs()
    
    LogAlpha_Interp = scipy.interpolate.RectBivariateSpline(LogTe, LogDensity, LogAlpha)
    LogAlpha_BSCoef = LogAlpha_Interp.get_coeffs()

    print('Saving results in file: jh_bscoef.npz')
    np.savez("jh_bscoef",
             DKnot=DKnot,
             TKnot=TKnot,
             order=4,
             LogR_BSCoef=LogR_BSCoef,
             LogS_BSCoef=LogS_BSCoef,
             LogAlpha_BSCoef=LogAlpha_BSCoef,
             A_Lyman=A_lyman,
             A_Balmer=A_balmer)

    return
    
